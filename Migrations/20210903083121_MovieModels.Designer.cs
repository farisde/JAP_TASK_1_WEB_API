// <auto-generated />
using System;
using JAP_TASK_1_WEB_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JAP_TASK_1_WEB_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210903083121_MovieModels")]
    partial class MovieModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CastMemberMovie", b =>
                {
                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<int>("StarredMoviesId")
                        .HasColumnType("int");

                    b.HasKey("CastId", "StarredMoviesId");

                    b.HasIndex("StarredMoviesId");

                    b.ToTable("CastMemberMovie");
                });

            modelBuilder.Entity("JAP_TASK_1_WEB_API.Models.CastMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CastMembers");
                });

            modelBuilder.Entity("JAP_TASK_1_WEB_API.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMovie")
                        .HasColumnType("bit");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("JAP_TASK_1_WEB_API.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RatedMovieId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RatedMovieId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("CastMemberMovie", b =>
                {
                    b.HasOne("JAP_TASK_1_WEB_API.Models.CastMember", null)
                        .WithMany()
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JAP_TASK_1_WEB_API.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("StarredMoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JAP_TASK_1_WEB_API.Models.Rating", b =>
                {
                    b.HasOne("JAP_TASK_1_WEB_API.Models.Movie", "RatedMovie")
                        .WithMany("RatingList")
                        .HasForeignKey("RatedMovieId");

                    b.Navigation("RatedMovie");
                });

            modelBuilder.Entity("JAP_TASK_1_WEB_API.Models.Movie", b =>
                {
                    b.Navigation("RatingList");
                });
#pragma warning restore 612, 618
        }
    }
}
